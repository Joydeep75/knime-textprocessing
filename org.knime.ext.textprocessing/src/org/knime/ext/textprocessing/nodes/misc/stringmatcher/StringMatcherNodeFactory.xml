<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE knimeNode PUBLIC "-//UNIKN//DTD KNIME Node 2.0//EN" "http://www.knime.org/Node.dtd">
<knimeNode icon="../../../icons/TextProcDefault.png" type="Learner">
	<name>String Matcher</name>
	<shortDescription>
	    The node finds for each string in the data list the most similar words of
	    the dictionary list.  
	</shortDescription>
	<fullDescription>
		<intro>
		The String Matcher node is able to compare two lists of strings,
		compute the distance between these strings and list the most similar 
		strings in the output table.
		The node requires two input data tables. A data table containing the 
		strings to compare and a data table containing a dictionary.
		The String Matcher finds for each element of the data table the most 
		similar words in the dictionary table. To compare the elements the 
		levenshtein-damerau-distance is used.
		This function calculates how many insertions, deletions, changing and 
		swappings are at least necessary to change one word into another.
		To find an optimal solution it is necessary that the weight of two 
		switches is greater or equal than the weight of an insert and a 
		deletion. 
		</intro>
		<option name="Search string column">
		Specify the desired column of the Data Table
		</option>
		<option name="Ditionary column">
		Specify the desired column of the Dictionary Table
		</option>
		<option name="Maximal number of related words">
		Specify the maximal number of related words
		</option>
		<option name="Process in memory">
		Process in memory will be faster, but it needs more memory.
		</option>
		<option name="Cost for deletion">
		The cost for deleting one character of the word
		</option>
		<option name="Cost for 	insertion">
		The cost for inserting one character into the word
		</option>
		<option name="Cost for changing">
		The cost for changing one character into another
		</option>
				<option name="Cost for switching">
		The cost for switching two characters of a word (aabca => aacba)
		</option>
	
	</fullDescription>
	<ports>
		<inPort name="Data Table" index="0">
		The data table containing the column with the words to search for 
		in the dictionary table</inPort>
		<inPort name="Dictionary Table" index="1">
		The data table, containing the column with the dictionary strings.</inPort>
		<outPort name="Related Words" index="0">
		The data table, with the original strings in the first column, 
		if specified the minimal distance in the second column, 
		the most related words (all with the same distance to the origin) are 
		listed in the third column.</outPort>
	</ports>	
	
</knimeNode>
